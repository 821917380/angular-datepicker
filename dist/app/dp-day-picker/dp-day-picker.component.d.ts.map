{"version":3,"names":[],"mappings":"","sources":["app/dp-day-picker/dp-day-picker.component.d.ts"],"sourcesContent":["import { SimpleChanges, OnChanges, OnInit } from '@angular/core';\nimport { Moment } from 'moment';\nimport { DayPickerService } from './service/day-picker.service';\nimport { ControlValueAccessor, FormControl, Validator } from '@angular/forms';\nimport { IObDayPickerApi } from './dp-day-picker.api';\nexport declare class ObDayPickerComponent implements OnChanges, OnInit, ControlValueAccessor, Validator {\n    private dayPickerService;\n    private shouldNgInit;\n    private userConfig;\n    private placeholder;\n    private disabled;\n    private minDate;\n    private maxDate;\n    private areCalendarsShown;\n    private hideStateHelper;\n    private pickerConfig;\n    private calendars;\n    private _value;\n    private userValue;\n    private viewValue;\n    private userValueType;\n    validateFn: Function;\n    private value;\n    api: IObDayPickerApi;\n    constructor(dayPickerService: DayPickerService);\n    onClick(): void;\n    onBodyClick(): void;\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    writeValue(value: Moment): void;\n    onChangeCallback(_: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    validate(c: FormControl): any;\n    isDateValid(value: string): void;\n    init(): void;\n    initValidators(): void;\n    initApi(): void;\n    daySelected({day}: {\n        day: any;\n    }): void;\n    inputFocused(): void;\n    showCalendars: () => void;\n    hideCalendars: () => void;\n    moveCalendars(base: Moment, months: number): void;\n    isLeftNavDisabled(month: Moment): boolean;\n    isRightNavDisabled(month: Moment): boolean;\n    onViewDateChange(date: string): void;\n    onKeydown(e: KeyboardEvent): void;\n}\n"],"file":"dp-day-picker.component.d.ts"}