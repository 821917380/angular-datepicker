{"version":3,"names":[],"mappings":"","sources":["app/app.component.js"],"sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar ob_day_picker_component_1 = require('./ob-day-picker/ob-day-picker.component');\nvar moment = require('moment');\nvar AppComponent = (function () {\n    function AppComponent() {\n        this.date = null;\n        this.minDate = moment().subtract(10, 'day');\n        this.minConf = {};\n        this.dayPickerConfig = {\n            firstDayOfWeek: 'mo',\n            calendarsAmount: 2,\n            // min: moment().subtract(1, 'month'),\n            // max: moment().add(1, 'month'),\n            placeholder: 'Set a date'\n        };\n    }\n    AppComponent.prototype.changeDate = function () {\n        this.date = moment().add(1, 'day');\n    };\n    AppComponent.prototype.togglePicker = function (state) {\n        state ? this.dayPicker.api.open() : this.dayPicker.api.close();\n    };\n    __decorate([\n        core_1.ViewChild('dayPicker'), \n        __metadata('design:type', ob_day_picker_component_1.ObDayPickerComponent)\n    ], AppComponent.prototype, \"dayPicker\", void 0);\n    AppComponent = __decorate([\n        core_1.Component({\n            selector: 'app-root',\n            template: \"\\n    <form #form=\\\"ngForm\\\">\\n      <ob-day-picker name=\\\"test\\\"\\n                     #test=\\\"ngModel\\\"\\n                     #dayPicker\\n                     [(ngModel)]=\\\"date\\\"\\n                     [config]=\\\"dayPickerConfig\\\"\\n                     required\\n                     [minDate]=\\\"minDate\\\">\\n      </ob-day-picker>\\n\\n      <button (click)=\\\"changeDate()\\\">Change Date</button>\\n      <button (click)=\\\"togglePicker(true)\\\">Open Picker</button>\\n      <button (click)=\\\"togglePicker(false)\\\">Close Picker</button>\\n\\n      <ob-day-picker name=\\\"min\\\"\\n                     #min=\\\"ngModel\\\"\\n                     [(ngModel)]=\\\"minDate\\\"\\n                     [config]=\\\"minConf\\\">\\n      </ob-day-picker>\\n\\n      <span>{{date}}</span>\\n\\n      <div *ngIf=\\\"test.errors && test.errors.required\\\">required</div>\\n      <div *ngIf=\\\"test.errors && test.errors.format\\\">format invalid</div>\\n      <div *ngIf=\\\"test.errors && test.errors.minDate\\\">minDate invalid</div>\\n      <div *ngIf=\\\"test.errors && test.errors.maxDate\\\">maxDate invalid</div>\\n    </form>\\n  \",\n            entryComponents: [ob_day_picker_component_1.ObDayPickerComponent]\n        }), \n        __metadata('design:paramtypes', [])\n    ], AppComponent);\n    return AppComponent;\n}());\nexports.AppComponent = AppComponent;\n"],"file":"app.component.js"}