{"version":3,"names":[],"mappings":"","sources":["app/dp-day-picker/dp-day-picker.component.js"],"sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar dp_calendar_component_1 = require('../dp-calendar/dp-calendar.component');\nvar moment = require('moment');\nvar day_picker_service_1 = require('./service/day-picker.service');\nvar forms_1 = require('@angular/forms');\nvar utils_service_1 = require('../common/services/utils/utils.service');\nvar ObDayPickerComponent = (function () {\n    function ObDayPickerComponent(dayPickerService) {\n        var _this = this;\n        this.dayPickerService = dayPickerService;\n        this.shouldNgInit = true;\n        // attributes\n        this.placeholder = '';\n        this.disabled = false;\n        this.areCalendarsShown = false;\n        this.hideStateHelper = false;\n        this.userValueType = 'object';\n        this.api = {};\n        this.showCalendars = function () {\n            _this.hideStateHelper = true;\n            _this.areCalendarsShown = true;\n        };\n        this.hideCalendars = function () {\n            _this.areCalendarsShown = false;\n        };\n    }\n    Object.defineProperty(ObDayPickerComponent.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        set: function (value) {\n            this._value = value;\n            this.viewValue = value ? value.format(this.pickerConfig.format) : '';\n            var val = this.userValueType === 'string' ? this.viewValue : value;\n            if (this.value) {\n                this.calendars = this.dayPickerService.moveCalendars(this.pickerConfig, this.value, this.value, 0);\n            }\n            this.onChangeCallback(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ObDayPickerComponent.prototype.onClick = function () {\n        this.hideStateHelper = true;\n    };\n    ObDayPickerComponent.prototype.onBodyClick = function () {\n        if (!this.hideStateHelper) {\n            this.hideCalendars();\n        }\n        this.hideStateHelper = false;\n    };\n    ObDayPickerComponent.prototype.ngOnInit = function () {\n        if (this.shouldNgInit) {\n            this.init();\n        }\n    };\n    ObDayPickerComponent.prototype.ngOnChanges = function (changes) {\n        this.shouldNgInit = false;\n        var minDate = changes.minDate, maxDate = changes.maxDate;\n        this.init();\n        if (minDate || maxDate) {\n            this.initValidators();\n        }\n    };\n    ObDayPickerComponent.prototype.writeValue = function (value) {\n        if (value) {\n            this.userValueType = typeof value;\n            this.userValue = value;\n            this.init();\n        }\n    };\n    ObDayPickerComponent.prototype.onChangeCallback = function (_) {\n    };\n    ;\n    ObDayPickerComponent.prototype.registerOnChange = function (fn) {\n        this.onChangeCallback = fn;\n    };\n    ObDayPickerComponent.prototype.registerOnTouched = function (fn) {\n    };\n    ObDayPickerComponent.prototype.validate = function (c) {\n        if (this.minDate || this.maxDate) {\n            return this.validateFn(c);\n        }\n        else {\n            return function () { return null; };\n        }\n    };\n    ObDayPickerComponent.prototype.isDateValid = function (value) {\n        if (this.dayPickerService.isDateValid(value, this.pickerConfig.format)) {\n            this.value = moment(value, this.pickerConfig.format);\n        }\n        else {\n            this.value = null;\n        }\n    };\n    // start\n    ObDayPickerComponent.prototype.init = function () {\n        this.pickerConfig = this.dayPickerService.getConfig(this.userConfig);\n        this.value = this.userValue ? utils_service_1.UtilsService.convertToMoment(this.userValue, this.pickerConfig.format) : this.value;\n        this.calendars = this.dayPickerService.generateCalendars(this.pickerConfig, this.value);\n        this.initApi();\n    };\n    ObDayPickerComponent.prototype.initValidators = function () {\n        this.validateFn = this.dayPickerService.createValidator({\n            minDate: typeof this.minDate === 'string' ?\n                moment(this.minDate, this.pickerConfig.format) : this.minDate,\n            maxDate: typeof this.maxDate === 'string' ?\n                moment(this.maxDate, this.pickerConfig.format) : this.maxDate\n        }, this.pickerConfig.format);\n        this.onChangeCallback(this.viewValue);\n    };\n    ObDayPickerComponent.prototype.initApi = function () {\n        this.api = {\n            open: this.showCalendars.bind(this),\n            close: this.hideCalendars.bind(this)\n        };\n    };\n    ObDayPickerComponent.prototype.daySelected = function (_a) {\n        var day = _a.day;\n        this.value = day.date;\n        if (this.pickerConfig.closeOnSelect) {\n            setTimeout(this.hideCalendars, this.pickerConfig.closeOnSelectDelay);\n        }\n    };\n    ObDayPickerComponent.prototype.inputFocused = function () {\n        this.hideStateHelper = false;\n        this.areCalendarsShown = true;\n    };\n    ObDayPickerComponent.prototype.moveCalendars = function (base, months) {\n        this.calendars = this.dayPickerService.moveCalendars(this.pickerConfig, this.value, base, months);\n    };\n    ObDayPickerComponent.prototype.isLeftNavDisabled = function (month) {\n        return this.dayPickerService.isMinMonth(this.pickerConfig.min, month);\n    };\n    ObDayPickerComponent.prototype.isRightNavDisabled = function (month) {\n        return this.dayPickerService.isMaxMonth(this.pickerConfig.max, month);\n    };\n    ObDayPickerComponent.prototype.onViewDateChange = function (date) {\n        if (this.dayPickerService.isDateValid(date, this.pickerConfig.format)) {\n            this.value = date !== '' ? moment(date, this.pickerConfig.format) : null;\n        }\n        else {\n            this.onChangeCallback(undefined);\n        }\n    };\n    ObDayPickerComponent.prototype.onKeydown = function (e) {\n        if (e.keyCode === 13) {\n            this.areCalendarsShown = !this.areCalendarsShown;\n            e.preventDefault();\n        }\n        if (e.keyCode === 27) {\n            this.areCalendarsShown = false;\n            e.preventDefault();\n        }\n        if (this.pickerConfig.disableKeypress) {\n            e.preventDefault();\n        }\n    };\n    __decorate([\n        core_1.Input('config'), \n        __metadata('design:type', Object)\n    ], ObDayPickerComponent.prototype, \"userConfig\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], ObDayPickerComponent.prototype, \"placeholder\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Boolean)\n    ], ObDayPickerComponent.prototype, \"disabled\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], ObDayPickerComponent.prototype, \"minDate\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], ObDayPickerComponent.prototype, \"maxDate\", void 0);\n    __decorate([\n        core_1.HostListener('click'), \n        __metadata('design:type', Function), \n        __metadata('design:paramtypes', []), \n        __metadata('design:returntype', void 0)\n    ], ObDayPickerComponent.prototype, \"onClick\", null);\n    __decorate([\n        core_1.HostListener('document:click'), \n        __metadata('design:type', Function), \n        __metadata('design:paramtypes', []), \n        __metadata('design:returntype', void 0)\n    ], ObDayPickerComponent.prototype, \"onBodyClick\", null);\n    ObDayPickerComponent = __decorate([\n        core_1.Component({\n            selector: 'dp-day-picker',\n            templateUrl: './dp-day-picker.component.html',\n            styleUrls: ['./dp-day-picker.component.less'],\n            entryComponents: [dp_calendar_component_1.ObCalendarComponent],\n            providers: [\n                day_picker_service_1.DayPickerService,\n                {\n                    provide: forms_1.NG_VALUE_ACCESSOR,\n                    useExisting: core_1.forwardRef(function () { return ObDayPickerComponent; }),\n                    multi: true\n                },\n                {\n                    provide: forms_1.NG_VALIDATORS,\n                    useExisting: core_1.forwardRef(function () { return ObDayPickerComponent; }),\n                    multi: true\n                }\n            ]\n        }), \n        __metadata('design:paramtypes', [day_picker_service_1.DayPickerService])\n    ], ObDayPickerComponent);\n    return ObDayPickerComponent;\n}());\nexports.ObDayPickerComponent = ObDayPickerComponent;\n"],"file":"dp-day-picker.component.js"}